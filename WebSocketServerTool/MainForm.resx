<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="textBox1.Text" xml:space="preserve">
    <value>1. Execute Visual Studio's Command Prompt with elevated privilege.

2. Run:
makecert -sk MyCert -ss MY -sr LocalMachine -n CN=mycompany.com -sky exchange -r

3. Obtain thumbprint of certificate using certificate manager e.g. 3228f47d6f0a56c47f62d96b9d0e8580049389a0.
‎
4. Associate certificate to port by running: 
netsh http add sslcert ipport=0.0.0.0:8088 certhash=3228f47d6f0a56c47f62d96b9d0e8580049389a0 appid={4846204e-e40a-4abe-ab71-8cfed0cb1567}.
</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAMAICAAAAEAIAB9AgAANgAAAEBAAAABACAAOQQAALMCAACAgAAAAQAgAKgIAADsBgAAiVBORw0K
        GgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAACRElEQVRYhc2XMaviQBDH/zlOkCdIGkHFQu4KmzTC
        lQqCnSAELCRoI6KkUPAbqKUWYqmIYGMjCEH8DGKRI42N4F0ZLBUURNS94oi86OqLlxe9KWdn9/efyexu
        liGE4JX25aX0/0HA189aaLvdot/vk9lshvl8jv1+D5/Ph0gkgkQi8Z1l2d+0ecxn9IAsy6RSqWC5XFLH
        o9EoarUaQxszXQFZlokoitQxu92OTCaDdDpNhQMmK7DdbpFMJgkt81gshmKx+NPlcv24t4apCvT7fSq8
        1+uB47ibWb83U7tgNptR/UbhpgXM53Mz080LeMSOxyMGgwERRVHXdKYEBAIBqr9QKJDFYnEGKYpCUqkU
        qdfr2O12ulhTTchxHCaTyZV/Op1CEATE43FyOp0wHo/PY6FQSBf7TxVQVZXkcjnC8zzcbjc1hhCC0Wik
        g7MsC0EQdA36sABVVUk+n4eiKOh2u6hUKobm2Ww2lMtlOBwOnf8hARpc2/vD4RCbzQatVutmJYC/mTca
        DYTD4avtafgkvIS/t0QigWw2C0mSoF1Gh8MBfr8foVAIyWSSeXt7o65rSMA9uGbBYBCdTsfwAaTZh5/A
        CNzj8aBarT7K/liAUXi73YbX6304+7sCngG/KeBZcKqAZ8KBi12wXq+RSqXOd3yz2QQAlEolS+DARQUk
        SaL+YFgFBy4uI4bRr2tl5prpKsDzPOP1eq+CrIJfCXA6nWi327pz3Uo4cOMoXq1W3yRJ+gUAPM/ffFRY
        JuCZ9vK34csF/AEdNiCmdde5RQAAAABJRU5ErkJggolQTkcNChoKAAAADUlIRFIAAABAAAAAQAgGAAAA
        qmlx3gAABABJREFUeJztm01IKm0Yhh9/ikD6QwU3LbRFFEhQLSqqTR+CFLXJoG1Q1LqN4jr4gugHS4h2
        ERQtWiQFtQghyH6MokW4iAIrMJTQCiJF729zjON3NGdGPe+MecOzcnzf57pmhpl3dIhK+dmRAWDdA9PI
        WTfAOiUBrBtgnR8vQMm6ge/y+vpKbrcbDw8PFAgESKlUUn19PRkMBmpoaJhRq9XWnCcBILpyuVzo7e1F
        WVkZiChtKRQKWCwWHB0dIZe5mMP+Xj6fDz09PRmhM5XZbBYsgTl0svb391FdXc0bnojQ3NyMeDwuXQHb
        29tQKBS8wSsqKmC32/H+/i54bubwl5eXUKlUvOGHhoZwf3+PXOdnCv/5+UkGg4H34e52u3MGF4WA+fl5
        zuBarRYrKyuCz3XRCYjFYqTRaDjBT0xMIBwOF6QPZgIODw857/2rqysUqg9mt8K7u7uspk4JMwE+n4/V
        1ClhJiAQCLCaOiXMBLy9vRV0/L29PZyenmZ93MVMgFarLci4Z2dn6OzsRF9fH42Pj2fdnpkAnU7Hedvp
        6Wny+/3f7s1QKLQ1NjaG9vZ28ng8RERUU1OTfXBWl8GZmRne9/1WqxWRSCRlnHg8Tk6nE7W1tX98x2az
        Zb18MhNwc3MjaOWn1WqxtLSEWCxGXq8XbW1tGbc9OTkRp4Dk6q2lpUWQBCJCXV0d5HJ5xs9NJlNWeCYC
        HA4H+vv7AYAODg4EC/iuZDIZLi4uxCfA4XB8NXl8fAwAGBwczLuA4eFhTvB/VcDv8ESEjo4ORKNRRCIR
        NDU15Q3eaDTi+fn5RVQC/g+frMnJSQDA3d0d9Hp9zvCtra0IhUL/8umNGXyylpeXAYCCweBWd3e3YPiu
        ri5BS2am8Mmy2+1IJBIUjUZpbm4OarWaM3hjYyM2NzeRSCQE9cgcPlkDAwNf5244HCaHwwGTyYTy8vKU
        7eRyOfR6PcxmM9bX13N+QiQK+GSpVCrYbDa8vLz8kxwrGo3S4+MjvF4vrq+v8fHxkddeRQOfrMrKSng8
        HhTqyCyogHzA/7o/+CvweRUgRfi8CZAqfF4ESBk+ZwFSh89JQDHACxZQLPCCBBQTPG8BxQbPS0A6eKVS
        idHRUczOzmZdzooRnrOAtbW1tFAjIyNI5tePEJKC5yQgGAxuVVVVpQWzWq1fAp6entI+pBQzPCcBLpcr
        457VaDTY2dnB7e0tLBaL5OBzFiDFc563gO9OAanDcxIAgDY2NiCTyYoOnrMAAOR0OosOnpcAALS4uFhU
        8LwFAKCFhYU//tWpVqslCQ9A2DtD5+fnWF1dJb/fT0ajkaampkin08l4DySClF6aYt0A65QEsG6AdUoC
        WDfAOj9eQCk/Pf8Bld+FUb7I0DsAAAAASUVORK5CYIKJUE5HDQoaCgAAAA1JSERSAAAAgAAAAIAIBgAA
        AMM+YcsAAAhvSURBVHic7Z1rSFP/H8c/07+3VOaiQqEst1JGRYWCFUuKGZGJZTcoGCTFv+xBBIUGPUi7
        /h8lQg9y0AWCImIUQRGZBgvEtFhaWWrhZtCNytR5aXP7/B/I4jfn5ZztnPM9+30/b3hTsDzne87rdc6x
        s3MBoFAoFAqFQqFQKBQKR9EgIusxUGSORqOZ8rMYBcdBUWFIAM5DAnAeEoDzkACchwTgPCQA5yEBOA8J
        wHn+w3oA0Zzh4WFwOp3odDphYnt7e0Gr1YLBYPhbvV4f+FOTlJTEevjjQUSqiPr9fnjw4AFu3rwZNRoN
        AoDoxsbGYmFhIVqtVvzx48f/5B4zCSAReJvNhsuXLw8L+lSNj4/HsrIy7OjoQBJApW1ubsb8/HxJwU9s
        TEwMHj9+HMfGxkgAtXRwcBDKy8vD3tWH09raWlRSAPolcIq0t7fjjh074MOHD4rOt62tTdH5Md/K1Nj6
        +npMTk5WbKsPNCMjA7u7uxXdAzBf2Wqr3W7HxMRERcHHxcXhsWPHsL+/X5ZlIgEEtrOzE2fPnq0o/OLi
        Yuzq6kI5l4sEEND+/n7IyclRDLzRaMRHjx7JCp4EENFdu3YpAl6n02FtbS16vV7Flo0EmKFXr16VHXxs
        bCwePnxYkTN/JICIfv78GbVarazwzWYztre3I6tlJAGm6d69e2UDr9fr8e7du8zAkwAz9MWLF7Kc5UtN
        TcULFy7g6Ogo82UkAaZpSUmJpOA1Gg3u27cPv3z5gqyXjQSYod3d3ZJv/Y8fP1YVeCECcHtF0JUrV2be
        OkQmJydH0ukpEW4FuHPnDushqCJcCtDd3Y0fP35kPQxVhEsBmpqaWA9BNeFSgDdv3rAegmrCpQAul4v1
        EFQTLgXo6+tjPQTVhEsB/H4/6yGoJlwKEBcXx3oIEcftdksyHS4F8Hq9rIcQVnw+H9y+fRtzc3Nxzpw5
        WF1dHfmZLNanKVm0sLBQlm//XC6XbKeCGxoacOnSpUHzS0lJwZGREToVLDY6nY71EATH5XLhzp070Ww2
        w9u3b4M+c7vdMDY2FtH0uRQgMzNTlulWVlZCb2+vJF8wjI6OQnV1NRqNRrDZbJP+G51OBykpKZHNiPXu
        mEWvXbsm20UgiYmJeOLEiYgu8b5//z5mZWXNOK9169YJOuSQABPa2dkpmwCBzp07Fy9duiTq4s+enh4s
        Li4WPI/KykoSINwK2cKkaHZ2Nt67d29aUB6PB86dO4dJSUmipt3Y2EgChNuKigpFBAi0oKAAW1paQoA9
        ffoUjUaj6OnNmzdP8J3EJMAkff/+vaJ3/QKMXzK2Z88edDqd+O3bt18WiyXsaR04cCBEJhJAZLds2aKo
        AIEmJCREfCl6Q0MDCSCmfr8fLl68GLTSnj9/zkSASLts2TL0+/2Cl517Afx+Pxw8eBABAJ89exYkwe7d
        u5kDFVubzYZilp9rAf4JHwCwqKgoaOV9+vQJU1NTmUMV2o0bN4qCz7UAE+EHarfbg1ai1WplDlZItVot
        Op1OEiAS+ACAK1asCDlBs23bNuaAp6tGo5nxfAIJIAB+oGfPng1amX19ffrFixczBz1Vz58/HxZ87gQQ
        Ah9g/LEszc3NQSu1o6ND9juFw+nRo0fDhs+VAELhB7pgwQL8/v37i39Oo7GxEePj45lDlwo+NwKIhR/o
        2rVrQy6qePjwoejz8nL09OnTEcPnQoBw4QdaWloacl795cuXuGjRIibgExIS8MaNG5LA/9cLECn8QMvK
        ykLOrv3+/Rv279+vKHyDwTDpl0YkgIzwA7VYLOjxeELmY7fbcdWqVbKCnzVrFp46dQqHhoYkX0//SgGk
        hh/o6tWrJz3Z4vP54NatWyj1o+R0Oh2ePHkSv379GjJPEkBh+IFqtVq8fPnypF+4+Hw+sNlsaDKZIppH
        bm4uXr9+XZYtXowAUffuYESE8vJyrKurk31e+fn5UFNTA2vWrJn05bsDAwPQ09Pz940hPT09f98Y4nK5
        QKvVQlZWFmRlZYFerw/6e3p6+tQv9JU40707mPnWrKYtf6pu3boVHQ4Hsl5+OfYAzAendviBajQatFgs
        USlB1AvAGj4AYFpaGra2tpIABD/6GrUCEHyOBSD4HAtA8DkWgOBzLADB51gAgs+xAASfYwEIPscCEHyO
        BSD4HAtA8DkWgOBzLADB51gAgs+xAASfYwEIPvsyE4Dgq6NMBAgH/sKFCyW9O5fgMxJALHyTyYRNTU2I
        iOj1erGurg7T09MJfjQKIBb+ypUr0ePx4MQ4HA6Mi4sj+NEmwJkzZ0TBunnzZgj8QEpLSwm+zAJI+rh4
        h8OBVVVVon5myZIlYX02WdLS0qC+vh7y8vIUu+sm2iOpAFVVVeDz+UT9TFtb25SfvXr1SvB0CH6YkWo3
        Mzw8DOEcs/V6PQ4MDITs/hsaGjAmJoZ2+zIfAiSbSVdXV9i/sWdmZmJNTQ0ODg5iV1cXHjp0CBMTEwl+
        NAnw7t27iP7bBjD+5C4xT/Am+JELINnvABkZGZppb0MWkMDDG4WEjvnSRDIBtFotmEwmqSY3bQi+hJFy
        V/PkyZOIDwMzlXb70h4CJJ/ZkSNHCL7KqqgAXq8Xtm/fTvBVVEUFQBx/C1ZJSQnBV0kVFwAR4c+fP1BU
        VETwVVAmAiAijI6OwqZNmwg+rwIgIoyMjIDZbCb4vAqAiDA0NATr168n+LwKgIjgdrvBYDAIEkDoK1Gp
        kQug2Ovjk5OTobW1daPVaoWCgoKQp1fOnz8fKioq4PXr17BhwwY6w6dQmD0q9tevX/9taWmp+/nzJ+Tl
        5UF2dnbE3yVQJs906zXqnhVMEZ/pBFDsEEBRZ0gAzkMCcB4SgPOQAJyHBOA8JADnIQEoFAqFQqFQKBQK
        hUKhUDjJ/wEcklPuTegmXwAAAABJRU5ErkJggg==
</value>
  </data>
</root>